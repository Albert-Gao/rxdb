{"version":3,"sources":["../../../src/plugins/server.ts"],"names":["pact","state","value","s","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","thenable","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","recover","spawnServer","path","port","cors","startServer","pouchdbExpressOptions","db","collectionsPath","SERVERS_OF_DB","has","set","storage","adapter","Error","adapterObj","pouchDBOptions","Object","assign","prefix","getPrefix","log","pseudo","PouchDB","defaults","app","APP_OF_DB","keys","collections","forEach","colName","tunnelCollectionPath","DBS_WITH_SERVER","add","use","origin","originToSend","usePouchExpressOptions","inMemoryConfig","logPath","nodePath","join","os","tmpdir","pouchApp","ExpressPouchDB","server","startupPromise","PROMISE_RESOLVE_VOID","Promise","res","rej","answered","listen","on","err","get","push","all","values","map","collection","url","name","pingDb","info","close","response","require","error","console","PouchdbAllDbs","WeakMap","WeakSet","normalizeDbName","splitted","split","filter","str","pop","length","ret","startsWith","pathWithSlash","endsWith","collectionPath","req","next","baseUrl","to","schema","version","toFull","originalUrl","replace","res1","setTimeout","ensureNoMoreCollections","args","database","onDestroy","RxDBServerPlugin","rxdb","init","PouchAdapterHttp","RxDBReplicationCouchDBPlugin","prototypes","RxDatabase","proto","overwritable","hooks","preDestroyRxDatabase","after","preCreateRxCollection"],"mappings":"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","sourcesContent":["import * as os from 'os';\nimport * as nodePath from 'path';\n\nimport express from 'express';\nimport type { Express } from 'express';\nimport corsFn from 'cors';\n\nimport {\n    addPouchPlugin,\n    PouchDB,\n    RxStoragePouch\n} from '../plugins/pouchdb';\nimport {\n    newRxError\n} from '../rx-error';\nimport type {\n    PouchDBExpressServerOptions,\n    RxDatabase,\n    RxPlugin,\n    ServerResponse\n} from '../types';\n\nimport { RxDBReplicationCouchDBPlugin } from './replication-couchdb';\n\nimport PouchAdapterHttp from 'pouchdb-adapter-http';\nimport { adapterObject, addRxPlugin } from '../index';\nimport {\n    flatClone, PROMISE_RESOLVE_VOID\n} from '../util';\n\nlet ExpressPouchDB: any;\ntry {\n    ExpressPouchDB = require('express-pouchdb');\n} catch (error) {\n    console.error(\n        'Since version 8.4.0 the module \\'express-pouchdb\\' is not longer delivered with RxDB.\\n' +\n        'You can install it with \\'npm install express-pouchdb\\''\n    );\n}\n\n// we have to clean up after tests so there is no stupid logging\n// @link https://github.com/pouchdb/pouchdb-server/issues/226\nconst PouchdbAllDbs = require('pouchdb-all-dbs');\nPouchdbAllDbs(PouchDB);\n\nconst APP_OF_DB: WeakMap<RxDatabase, Express> = new WeakMap();\nconst SERVERS_OF_DB = new WeakMap();\nconst DBS_WITH_SERVER = new WeakSet();\n\n\nconst normalizeDbName = function (db: RxDatabase) {\n    const splitted = db.name.split('/').filter((str: string) => str !== '');\n    return splitted.pop();\n};\n\nconst getPrefix = function (db: RxDatabase) {\n    const splitted = db.name.split('/').filter((str: string) => str !== '');\n    splitted.pop(); // last was the name\n    if (splitted.length === 0) {\n        return '';\n    }\n    let ret = splitted.join('/') + '/';\n    if (db.name.startsWith('/')) {\n        ret = '/' + ret;\n    }\n    return ret;\n};\n\n/**\n * tunnel requests so collection-names can be used as paths\n */\nfunction tunnelCollectionPath(\n    db: RxDatabase,\n    path: string,\n    app: Express,\n    colName: string\n) {\n    const pathWithSlash = path.endsWith('/') ? path : path + '/';\n    const collectionPath = pathWithSlash + colName;\n    app.use(collectionPath, async function (req: any, res: any, next: any) {\n        if (req.baseUrl.endsWith(collectionPath)) {\n\n            while (!db[colName]) {\n                // if the collection is migrated,\n                // it can happen that it does not exist at this moment\n                await new Promise(res1 => setTimeout(res1, 50));\n            }\n            const to = normalizeDbName(db) + '-rxdb-' + db[colName].schema.version + '-' + colName;\n            const toFull = req.originalUrl.replace(collectionPath, pathWithSlash + to);\n            req.originalUrl = toFull;\n        }\n        next();\n    });\n}\n\nexport async function spawnServer(\n    this: RxDatabase,\n    {\n        path = '/db',\n        port = 3000,\n        cors = false,\n        startServer = true,\n        pouchdbExpressOptions = {}\n    }\n): Promise<ServerResponse> {\n    const db: RxDatabase = this;\n    const collectionsPath = startServer ? path : '/';\n    if (!SERVERS_OF_DB.has(db)) {\n        SERVERS_OF_DB.set(db, []);\n    }\n\n    const storage: RxStoragePouch = db.storage as any;\n    if (!storage.adapter) {\n        throw new Error('The RxDB server plugin only works with pouchdb storage.');\n    }\n\n    const adapterObj = adapterObject(storage.adapter);\n    const pouchDBOptions = Object.assign(\n        { prefix: getPrefix(db), log: false },\n        adapterObj,\n    );\n\n    const pseudo = PouchDB.defaults(pouchDBOptions);\n\n    const app = express();\n    APP_OF_DB.set(db, app);\n\n    Object.keys(db.collections).forEach(colName => {\n        // tunnel requests so collection-names can be used as paths\n        tunnelCollectionPath(db, collectionsPath, app, colName);\n    });\n\n\n\n    // remember to throw error if collection is created after the server is already there\n    DBS_WITH_SERVER.add(db);\n\n    if (cors) {\n        app.use(corsFn({\n            'origin': function (origin, callback) {\n                const originToSend: any = origin || '*';\n                callback(null, originToSend);\n            },\n            'credentials': true,\n            'methods': 'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT',\n        }));\n    }\n\n    /**\n     * Overwrite the defaults of PouchDBExpressServerOptions.\n     * In RxDB the defaults should not polute anything with folders so we store the config in memory\n     * and the logs in the tmp folder of the os.\n     */\n    const usePouchExpressOptions: PouchDBExpressServerOptions = flatClone(pouchdbExpressOptions);\n    if (typeof usePouchExpressOptions.inMemoryConfig === 'undefined') {\n        usePouchExpressOptions.inMemoryConfig = true;\n    }\n    if (typeof usePouchExpressOptions.logPath === 'undefined') {\n        usePouchExpressOptions.logPath = nodePath.join(\n            os.tmpdir(),\n            'rxdb-server-log.txt'\n        );\n    }\n\n    const pouchApp = ExpressPouchDB(pseudo, usePouchExpressOptions);\n\n    app.use(collectionsPath, pouchApp);\n\n    let server = null;\n    let startupPromise: Promise<void> = PROMISE_RESOLVE_VOID;\n    if (startServer) {\n        /**\n         * Listen for errors on server startup.\n         * and properly handle the error instead of returning a startupPromise\n         */\n        startupPromise = new Promise((res, rej) => {\n            let answered = false;\n            server = app.listen(port, () => {\n                if (!answered) {\n                    answered = true;\n                    res();\n                }\n            });\n            server.on('error', (err) => {\n                if (!answered) {\n                    answered = true;\n                    rej(err);\n                }\n            });\n        });\n        SERVERS_OF_DB.get(db).push(server);\n\n        /**\n         * When the database has no documents, there is no db file\n         * and so the replication would not work.\n         * This is a hack which ensures that the couchdb instance exists\n         * and we can replicate even if there is no document in the beginning.\n         */\n        Promise.all(\n            Object.values(db.collections).map(async (collection) => {\n                const url = 'http://localhost:' + port + collectionsPath + '/' + collection.name;\n                try {\n                    const pingDb = new PouchDB(url);\n                    await pingDb.info();\n                    await pingDb.close();\n                } catch (_err) { }\n            })\n        );\n    }\n\n\n    await startupPromise;\n    const response: ServerResponse = {\n        app,\n        pouchApp,\n        server\n    };\n    return response;\n}\n\n/**\n * when a server is created, no more collections can be spawned\n */\nfunction ensureNoMoreCollections(args: any) {\n    if (DBS_WITH_SERVER.has(args.database)) {\n        const err = newRxError(\n            'S1', {\n            collection: args.name,\n            database: args.database.name\n        }\n        );\n        throw err;\n    }\n}\n\n/**\n * runs when the database gets destroyed\n */\nexport function onDestroy(db: RxDatabase) {\n    if (SERVERS_OF_DB.has(db)) {\n        SERVERS_OF_DB.get(db).forEach((server: any) => server.close());\n    }\n}\n\nexport const RxDBServerPlugin: RxPlugin = {\n    name: 'server',\n    rxdb: true,\n    init() {\n        addPouchPlugin(PouchAdapterHttp);\n        addRxPlugin(RxDBReplicationCouchDBPlugin);\n    },\n    prototypes: {\n        RxDatabase: (proto: any) => {\n            proto.server = spawnServer;\n        }\n    },\n    overwritable: {},\n    hooks: {\n        preDestroyRxDatabase: {\n            after: onDestroy\n        },\n        preCreateRxCollection: {\n            after: ensureNoMoreCollections\n        }\n    }\n};\n"],"file":"server.js"}