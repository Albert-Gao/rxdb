{"version":3,"sources":["../../../../src/plugins/local-documents/local-documents-helper.ts"],"names":["removeLocalDocumentsStorageInstance","storage","databaseName","collectionName","createLocalDocumentStorageInstance","storageInstance","remove","LOCAL_DOC_STATE_BY_PARENT","WeakMap","createLocalDocStateByParent","parent","database","name","statePromise","instanceCreationOptions","multiInstance","RX_LOCAL_DOCUMENT_SCHEMA","docCache","DocCache","sub","$","pipe","cE","isLocal","subscribe","doc","get","documentId","_handleChangeEvent","_subs","push","storageToken","databaseStorageToken","subLocalDocs","changeStream","eventBulk","changeEventBulk","id","internal","undefined","events","map","ev","databaseToken","token","$emit","set","getLocalDocStateByParent","collection","createStorageInstance","getCollectionLocalInstanceName","schema","options","closeStateByParent","then","state","close","version","primaryKey","type","properties","data","additionalProperties","required"],"mappings":"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","sourcesContent":["import { filter } from 'rxjs/operators';\nimport { DocCache } from '../../doc-cache';\nimport { newRxError } from '../../rx-error';\nimport { fillWithDefaultSettings } from '../../rx-schema-helper';\nimport {\n    getWrappedStorageInstance,\n    storageChangeEventToRxChangeEvent\n} from '../../rx-storage-helper';\nimport type {\n    LocalDocumentParent,\n    LocalDocumentState,\n    RxChangeEvent,\n    RxChangeEventBulk,\n    RxDatabase,\n    RxDocumentData,\n    RxJsonSchema,\n    RxLocalDocument,\n    RxLocalDocumentData,\n    RxStorage\n} from '../../types';\n\nconst LOCAL_DOC_STATE_BY_PARENT: WeakMap<LocalDocumentParent, Promise<LocalDocumentState>> = new WeakMap();\n\n\nexport function createLocalDocStateByParent(parent: LocalDocumentParent): void {\n    const database: RxDatabase = parent.database ? parent.database : parent as any;\n    const collectionName = parent.database ? parent.name : '';\n    const statePromise = (async () => {\n        let storageInstance = await createLocalDocumentStorageInstance(\n            database.storage,\n            database.name,\n            collectionName,\n            database.instanceCreationOptions,\n            database.multiInstance\n        );\n        storageInstance = getWrappedStorageInstance(\n            database,\n            storageInstance,\n            RX_LOCAL_DOCUMENT_SCHEMA\n        );\n        const docCache = new DocCache<RxLocalDocument<any, any>>();\n\n        /**\n         * Update cached local documents on events.\n         */\n        const sub = parent.$\n            .pipe(\n                filter(cE => (cE as RxChangeEvent<any>).isLocal)\n            )\n            .subscribe((cE: RxChangeEvent<any>) => {\n                const doc = docCache.get(cE.documentId);\n                if (doc) {\n                    doc._handleChangeEvent(cE);\n                }\n            });\n        parent._subs.push(sub);\n\n        /**\n         * Emit the changestream into the collections change stream\n         */\n        const databaseStorageToken = await database.storageToken;\n        const subLocalDocs = storageInstance.changeStream().subscribe(eventBulk => {\n            const changeEventBulk: RxChangeEventBulk<RxLocalDocumentData> = {\n                id: eventBulk.id,\n                internal: false,\n                collectionName: parent.database ? parent.name : undefined,\n                storageToken: databaseStorageToken,\n                events: eventBulk.events.map(ev => storageChangeEventToRxChangeEvent(\n                    true,\n                    ev,\n                    parent.database ? parent as any : undefined\n                )),\n                databaseToken: database.token\n            };\n            database.$emit(changeEventBulk);\n        });\n        parent._subs.push(subLocalDocs);\n\n        return {\n            database,\n            parent,\n            storageInstance,\n            docCache\n        }\n    })();\n    LOCAL_DOC_STATE_BY_PARENT.set(parent, statePromise);\n}\n\nexport function getLocalDocStateByParent(parent: LocalDocumentParent): Promise<LocalDocumentState> {\n    const statePromise = LOCAL_DOC_STATE_BY_PARENT.get(parent);\n    if (!statePromise) {\n        const database: RxDatabase = parent.database ? parent.database : parent as any;\n        const collectionName = parent.database ? parent.name : '';\n        throw newRxError('LD8', {\n            database: database.name,\n            collection: collectionName\n        });\n    }\n    return statePromise;\n}\n\n\nexport function createLocalDocumentStorageInstance(\n    storage: RxStorage<any, any>,\n    databaseName: string,\n    collectionName: string,\n    instanceCreationOptions: any,\n    multiInstance: boolean\n) {\n    return storage.createStorageInstance<RxLocalDocumentData>({\n        databaseName: databaseName,\n        /**\n         * Use a different collection name for the local documents instance\n         * so that the local docs can be kept while deleting the normal instance\n         * after migration.\n         */\n        collectionName: getCollectionLocalInstanceName(collectionName),\n        schema: RX_LOCAL_DOCUMENT_SCHEMA,\n        options: instanceCreationOptions,\n        multiInstance\n    });\n}\n\nexport function closeStateByParent(parent: LocalDocumentParent) {\n    const statePromise = LOCAL_DOC_STATE_BY_PARENT.get(parent);\n    if (statePromise) {\n        LOCAL_DOC_STATE_BY_PARENT.delete(parent);\n        return statePromise.then(state => state.storageInstance.close());\n    }\n}\n\nexport async function removeLocalDocumentsStorageInstance(\n    storage: RxStorage<any, any>,\n    databaseName: string,\n    collectionName: string\n) {\n    const storageInstance = await createLocalDocumentStorageInstance(\n        storage,\n        databaseName,\n        collectionName,\n        {},\n        false\n    );\n    await storageInstance.remove();\n}\n\n\nexport function getCollectionLocalInstanceName(collectionName: string): string {\n    return 'plugin-local-documents-' + collectionName;\n}\n\nexport const RX_LOCAL_DOCUMENT_SCHEMA: RxJsonSchema<RxDocumentData<RxLocalDocumentData>> = fillWithDefaultSettings({\n    version: 0,\n    primaryKey: 'id',\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string'\n        },\n        data: {\n            type: 'object',\n            additionalProperties: true\n        }\n    },\n    required: [\n        'id',\n        'data'\n    ]\n});\n"],"file":"local-documents-helper.js"}