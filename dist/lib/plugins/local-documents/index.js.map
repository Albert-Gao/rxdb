{"version":3,"sources":["../../../../src/plugins/local-documents/index.ts"],"names":["RxDBLocalDocumentsPlugin","name","rxdb","prototypes","RxCollection","proto","insertLocal","upsertLocal","getLocal","getLocal$","RxDatabase","hooks","createRxDatabase","before","args","creator","localDocuments","database","createRxCollection","collection","preDestroyRxDatabase","after","db","postDestroyRxCollection","postRemoveRxDatabase","storage","databaseName","postRemoveRxCollection","collectionName","overwritable"],"mappings":";;;;;;;;;;AAGA;;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAOA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASO,IAAMA,wBAAkC,GAAG;AAC9CC,EAAAA,IAAI,EAAE,iBADwC;AAE9CC,EAAAA,IAAI,EAAE,IAFwC;AAG9CC,EAAAA,UAAU,EAAE;AACRC,IAAAA,YAAY,EAAE,sBAACC,KAAD,EAAgB;AAC1BA,MAAAA,KAAK,CAACC,WAAN,GAAoBA,2BAApB;AACAD,MAAAA,KAAK,CAACE,WAAN,GAAoBA,2BAApB;AACAF,MAAAA,KAAK,CAACG,QAAN,GAAiBA,wBAAjB;AACAH,MAAAA,KAAK,CAACI,SAAN,GAAkBA,yBAAlB;AACH,KANO;AAORC,IAAAA,UAAU,EAAE,oBAACL,KAAD,EAAgB;AACxBA,MAAAA,KAAK,CAACC,WAAN,GAAoBA,2BAApB;AACAD,MAAAA,KAAK,CAACE,WAAN,GAAoBA,2BAApB;AACAF,MAAAA,KAAK,CAACG,QAAN,GAAiBA,wBAAjB;AACAH,MAAAA,KAAK,CAACI,SAAN,GAAkBA,yBAAlB;AACH;AAZO,GAHkC;AAiB9CE,EAAAA,KAAK,EAAE;AACHC,IAAAA,gBAAgB,EAAE;AACdC,MAAAA,MAAM,EAAE,gBAAAC,IAAI,EAAI;AACZ,YAAIA,IAAI,CAACC,OAAL,CAAaC,cAAjB,EAAiC;AAC7B;AACpB;AACA;AACA;;AACoB;AAAY,iEAA4BF,IAAI,CAACG,QAAjC;AACf;AACJ;AATa,KADf;AAYHC,IAAAA,kBAAkB,EAAE;AAChBL,MAAAA,MAAM,EAAE,gBAAAC,IAAI,EAAI;AACZ,YAAIA,IAAI,CAACC,OAAL,CAAaC,cAAjB,EAAiC;AAC7B;AACpB;AACA;AACA;;AACoB;AAAY,iEAA4BF,IAAI,CAACK,UAAjC;AACf;AACJ;AATe,KAZjB;AAuBHC,IAAAA,oBAAoB,EAAE;AAClBC,MAAAA,KAAK,EAAE,eAAAC,EAAE,EAAI;AACT,eAAO,8CAAmBA,EAAnB,CAAP;AACH;AAHiB,KAvBnB;AA4BHC,IAAAA,uBAAuB,EAAE;AACrBF,MAAAA,KAAK,EAAE,eAAAF,UAAU;AAAA,eAAI,8CAAmBA,UAAnB,CAAJ;AAAA;AADI,KA5BtB;AA+BHK,IAAAA,oBAAoB,EAAE;AAClBH,MAAAA,KAAK,EAAE,eAAAP,IAAI,EAAI;AACX,eAAO,+DACHA,IAAI,CAACW,OADF,EAEHX,IAAI,CAACY,YAFF,EAGH,EAHG,CAAP;AAKH;AAPiB,KA/BnB;AAwCHC,IAAAA,sBAAsB,EAAE;AACpBN,MAAAA,KAAK,EAAE,eAAAP,IAAI,EAAI;AACX,eAAO,+DACHA,IAAI,CAACW,OADF,EAEHX,IAAI,CAACY,YAFF,EAGHZ,IAAI,CAACc,cAHF,CAAP;AAKH;AAPmB;AAxCrB,GAjBuC;AAmE9CC,EAAAA,YAAY,EAAE;AAnEgC,CAA3C","sourcesContent":["import type {\n    RxPlugin\n} from '../../types';\nimport {\n    getLocal,\n    getLocal$,\n    insertLocal,\n    upsertLocal\n} from './local-documents';\nimport {\n    closeStateByParent,\n    createLocalDocStateByParent,\n    removeLocalDocumentsStorageInstance\n} from './local-documents-helper';\n\nexport * from './local-documents';\nexport * from './rx-local-document';\nexport type {\n    LocalDocumentParent,\n    LocalDocumentState,\n    RxLocalDocument,\n    RxLocalDocumentData\n} from '../../types/plugins/local-documents';\n\n\nexport const RxDBLocalDocumentsPlugin: RxPlugin = {\n    name: 'local-documents',\n    rxdb: true,\n    prototypes: {\n        RxCollection: (proto: any) => {\n            proto.insertLocal = insertLocal;\n            proto.upsertLocal = upsertLocal;\n            proto.getLocal = getLocal;\n            proto.getLocal$ = getLocal$;\n        },\n        RxDatabase: (proto: any) => {\n            proto.insertLocal = insertLocal;\n            proto.upsertLocal = upsertLocal;\n            proto.getLocal = getLocal;\n            proto.getLocal$ = getLocal$;\n        }\n    },\n    hooks: {\n        createRxDatabase: {\n            before: args => {\n                if (args.creator.localDocuments) {\n                    /**\n                     * We do not have to await\n                     * the creation to speed up initial page load.\n                     */\n                    /* await */ createLocalDocStateByParent(args.database);\n                }\n            }\n        },\n        createRxCollection: {\n            before: args => {\n                if (args.creator.localDocuments) {\n                    /**\n                     * We do not have to await\n                     * the creation to speed up initial page load.\n                     */\n                    /* await */ createLocalDocStateByParent(args.collection);\n                }\n            }\n        },\n        preDestroyRxDatabase: {\n            after: db => {\n                return closeStateByParent(db);\n            }\n        },\n        postDestroyRxCollection: {\n            after: collection => closeStateByParent(collection)\n        },\n        postRemoveRxDatabase: {\n            after: args => {\n                return removeLocalDocumentsStorageInstance(\n                    args.storage,\n                    args.databaseName,\n                    ''\n                );\n            }\n        },\n        postRemoveRxCollection: {\n            after: args => {\n                return removeLocalDocumentsStorageInstance(\n                    args.storage,\n                    args.databaseName,\n                    args.collectionName\n                );\n            }\n        }\n    },\n    overwritable: {}\n};\n"],"file":"index.js"}