{"version":3,"sources":["../../src/util.ts"],"names":["body","recover","result","e","then","pluginMissing","pluginKey","keyParts","split","pluginName","forEach","part","ucfirst","Error","fastUnsecureHash","obj","JSON","stringify","hashValue","i","chr","len","length","charCodeAt","RXDB_HASH_SALT","hash","msg","Md5","_lastNow","now","ret","Date","getTime","nextTick","Promise","res","setTimeout","promiseWait","ms","toPromise","maybePromise","resolve","PROMISE_RESOLVE_TRUE","PROMISE_RESOLVE_FALSE","PROMISE_RESOLVE_NULL","PROMISE_RESOLVE_VOID","requestIdlePromise","timeout","window","promiseSeries","tasks","initial","reduce","current","next","requestIdleCallbackIfAvailable","fun","str","f","charAt","toUpperCase","substr","trimDots","slice","runXTimes","xTimes","fn","Array","fill","_v","idx","ensureNotFalsy","sortObject","noArraySort","isArray","sort","a","b","localeCompare","map","RegExp","out","Object","keys","key","stringifyFilter","value","toString","randomCouchString","text","possible","Math","floor","random","RANDOM_STRING","lastOfArray","ar","shuffleArray","arr","batchArray","array","batchSize","batch","splice","push","removeOneFromArrayIfMatches","condition","done","adapterObject","adapter","adapterObj","db","undefined","recursiveDeepCopy","o","clone","flatClone","assign","firstPropertyNameOfObject","firstPropertyValueOfObject","isElectronRenderer","flattenObject","ob","toReturn","hasOwnProperty","flatObject","x","parseRevision","revision","height","parseInt","getHeightOfRevision","createRevision","docData","previousDocData","previousRevision","_rev","previousRevisionHeigth","newRevisionHeight","docWithoutRev","_rev_tree","diggestString","revisionHash","overwriteGetterForCaching","getterName","defineProperty","get","isFolderPath","name","includes","getFromMapOrThrow","val","getFromObjectOrThrow","isMaybeReadonlyArray","blobBufferUtil","createBlobBuffer","data","type","blobBuffer","Buffer","from","Blob","createBlobBufferFromBase64","base64String","fetch","base64Response","blob","isBlobBuffer","isBuffer","reader","FileReader","addEventListener","target","blobBufferType","prototype","call","readAsText","toBase64String","rej","onerror","onload","fullResult","shift","join","readAsDataURL","size","byteLength","RXJS_SHARE_REPLAY_DEFAULTS","bufferSize","refCount","RX_META_LWT_MINIMUM","getDefaultRxDocumentMeta","lwt","getDefaultRevision","getSortDocumentsByLastWriteTimeComparator","primaryPath","_meta","sortDocumentsByLastWriteTime","docs"],"mappings":"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","sourcesContent":["import type {\n    BlobBuffer,\n    DeepReadonlyObject,\n    MaybeReadonly,\n    RxDocumentData,\n    RxDocumentMeta\n} from './types';\nimport {\n    default as deepClone\n} from 'clone';\n\n/**\n * Returns an error that indicates that a plugin is missing\n * We do not throw a RxError because this should not be handled\n * programmatically but by using the correct import\n */\nexport function pluginMissing(\n    pluginKey: string\n): Error {\n    const keyParts = pluginKey.split('-');\n    let pluginName = 'RxDB';\n    keyParts.forEach(part => {\n        pluginName += ucfirst(part);\n    });\n    pluginName += 'Plugin';\n    return new Error(\n        `You are using a function which must be overwritten by a plugin.\n        You should either prevent the usage of this function or add the plugin via:\n            import { ${pluginName} } from 'rxdb/plugins/${pluginKey}';\n            addRxPlugin(${pluginName});\n        `\n    );\n}\n\n/**\n * this is a very fast hashing but its unsecure\n * @link http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n * @return a number as hash-result\n */\nexport function fastUnsecureHash(obj: any): number {\n    if (typeof obj !== 'string') obj = JSON.stringify(obj);\n    let hashValue = 0,\n        i, chr, len;\n    if (obj.length === 0) return hashValue;\n    for (i = 0, len = obj.length; i < len; i++) {\n        chr = obj.charCodeAt(i);\n        // tslint:disable-next-line\n        hashValue = ((hashValue << 5) - hashValue) + chr;\n        // tslint:disable-next-line\n        hashValue |= 0; // Convert to 32bit integer\n    }\n    if (hashValue < 0) hashValue = hashValue * -1;\n    return hashValue;\n}\n\n/**\n * Does a RxDB-specific hashing of the given data.\n * We use a static salt so using a rainbow-table\n * or google-ing the hash will not work.\n *\n * spark-md5 is used here\n * because pouchdb uses the same\n * and build-size could be reduced by 9kb\n * \n * TODO instead of using md5 we should use the hash method from the given RxStorage\n * this change would require some rewrites because the RxStorage hash is async.\n * So maybe it is even better to use non-cryptographic hashing like we do at fastUnsecureHash()\n * which would even be faster.\n */\nimport Md5 from 'spark-md5';\nexport const RXDB_HASH_SALT = 'rxdb-specific-hash-salt';\nexport function hash(msg: string | any): string {\n    if (typeof msg !== 'string') {\n        msg = JSON.stringify(msg);\n    }\n    return Md5.hash(RXDB_HASH_SALT + msg);\n}\n\n/**\n * Returns the current unix time in milliseconds\n * Because the accuracy of getTime() in javascript is bad,\n * and we cannot rely on performance.now() on all plattforms,\n * this method implements a way to never return the same value twice.\n * This ensures that when now() is called often, we do not loose the information\n * about which call came first and which came after.\n * Caution: Do not call this too often in a short timespan\n * because it might return 'the future'\n */\nlet _lastNow: number = 0;\n/**\n * Returns the current time in milliseconds,\n * also ensures to not return the same value twice.\n */\nexport function now(): number {\n    let ret = new Date().getTime();\n    if (ret <= _lastNow) {\n        ret = _lastNow + 1;\n    }\n    _lastNow = ret;\n    return ret;\n}\n\n/**\n * returns a promise that resolves on the next tick\n */\nexport function nextTick(): Promise<void> {\n    return new Promise(res => setTimeout(res, 0));\n}\n\nexport function promiseWait(ms: number = 0): Promise<void> {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nexport function toPromise<T>(maybePromise: Promise<T> | T): Promise<T> {\n    if (maybePromise && typeof (maybePromise as any).then === 'function') {\n        // is promise\n        return maybePromise as any;\n    } else {\n        return Promise.resolve(maybePromise);\n    }\n}\n\nexport const PROMISE_RESOLVE_TRUE: Promise<true> = Promise.resolve(true);\nexport const PROMISE_RESOLVE_FALSE: Promise<false> = Promise.resolve(false);\nexport const PROMISE_RESOLVE_NULL: Promise<null> = Promise.resolve(null);\nexport const PROMISE_RESOLVE_VOID: Promise<void> = Promise.resolve();\n\nexport function requestIdlePromise(timeout: number | null = null) {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) {\n        return new Promise(\n            res => (window as any)['requestIdleCallback'](res, {\n                timeout\n            })\n        );\n    } else {\n        return promiseWait(0);\n    }\n}\n\n\n/**\n * like Promise.all() but runs in series instead of parallel\n * @link https://github.com/egoist/promise.series/blob/master/index.js\n * @param tasks array with functions that return a promise\n */\nexport function promiseSeries(\n    tasks: Function[],\n    initial?: any\n): Promise<any[]> {\n    return tasks\n        .reduce(\n            (current, next) => (current as any).then(next),\n            Promise.resolve(initial)\n        );\n}\n\n/**\n * run the callback if requestIdleCallback available\n * do nothing if not\n * @link https://developer.mozilla.org/de/docs/Web/API/Window/requestIdleCallback\n */\nexport function requestIdleCallbackIfAvailable(fun: Function): void {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) (window as any)['requestIdleCallback'](fun);\n}\n\n/**\n * uppercase first char\n */\nexport function ucfirst(str: string): string {\n    str += '';\n    const f = str.charAt(0)\n        .toUpperCase();\n    return f + str.substr(1);\n}\n\n/**\n * removes trailing and ending dots from the string\n */\nexport function trimDots(str: string): string {\n    // start\n    while (str.charAt(0) === '.')\n        str = str.substr(1);\n\n    // end\n    while (str.slice(-1) === '.')\n        str = str.slice(0, -1);\n\n    return str;\n}\n\n\nexport function runXTimes(xTimes: number, fn: (idx: number) => void) {\n    new Array(xTimes).fill(0).forEach((_v, idx) => fn(idx));\n}\n\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null): T {\n    if (!obj) {\n        throw new Error('ensureNotFalsy() is falsy');\n    }\n    return obj;\n}\n\n/**\n * deep-sort an object so its attributes are in lexical order.\n * Also sorts the arrays inside of the object if no-array-sort not set\n */\nexport function sortObject(obj: any, noArraySort = false): any {\n    if (!obj) return obj; // do not sort null, false or undefined\n\n    // array\n    if (!noArraySort && Array.isArray(obj)) {\n        return obj\n            .sort((a, b) => {\n                if (typeof a === 'string' && typeof b === 'string')\n                    return a.localeCompare(b);\n\n                if (typeof a === 'object') return 1;\n                else return -1;\n            })\n            .map(i => sortObject(i, noArraySort));\n    }\n\n    // object\n    // array is also of type object\n    if (typeof obj === 'object' && !Array.isArray(obj)) {\n        if (obj instanceof RegExp)\n            return obj;\n\n        const out: any = {};\n        Object.keys(obj)\n            .sort((a, b) => a.localeCompare(b))\n            .forEach(key => {\n                out[key] = sortObject(obj[key], noArraySort);\n            });\n        return out;\n    }\n\n    // everything else\n    return obj;\n}\n\n\n/**\n * used to JSON.stringify() objects that contain a regex\n * @link https://stackoverflow.com/a/33416684 thank you Fabian Jakobs!\n */\nexport function stringifyFilter(key: string, value: any) {\n    if (value instanceof RegExp) {\n        return value.toString();\n    }\n    return value;\n}\n\n/**\n * get a random string which can be used with couchdb\n * @link http://stackoverflow.com/a/1349426/3443137\n */\nexport function randomCouchString(length: number = 10): string {\n    let text = '';\n    const possible = 'abcdefghijklmnopqrstuvwxyz';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n}\n\n/**\n * A random string that is never inside of any storage\n */\nexport const RANDOM_STRING = 'Fz7SZXPmYJujkzjY1rpXWvlWBqoGAfAX';\n\n\nexport function lastOfArray<T>(ar: T[]): T {\n    return ar[ar.length - 1];\n}\n\n/**\n * shuffle the given array\n */\nexport function shuffleArray<T>(arr: T[]): T[] {\n    return arr.sort(() => (Math.random() - 0.5));\n}\n\n/**\n * Split array with items into smaller arrays with items\n * @link https://stackoverflow.com/a/7273794/3443137\n */\nexport function batchArray<T>(array: T[], batchSize: number): T[][] {\n    array = array.slice(0);\n    const ret: T[][] = [];\n    while (array.length) {\n        const batch = array.splice(0, batchSize);\n        ret.push(batch);\n    }\n    return ret;\n}\n\n\n/**\n * @link https://stackoverflow.com/a/15996017\n */\nexport function removeOneFromArrayIfMatches<T>(ar: T[], condition: (x: T) => boolean): T[] {\n    ar = ar.slice();\n    let i = ar.length;\n    let done = false;\n    while (i-- && !done) {\n        if (condition(ar[i])) {\n            done = true;\n            ar.splice(i, 1);\n        }\n    }\n    return ar;\n}\n\n\n/**\n * transforms the given adapter into a pouch-compatible object\n */\nexport function adapterObject(adapter: any): any {\n    let adapterObj: any = {\n        db: adapter\n    };\n    if (typeof adapter === 'string') {\n        adapterObj = {\n            adapter,\n            db: undefined,\n        };\n    }\n    return adapterObj;\n}\n\n\nfunction recursiveDeepCopy<T>(o: T | DeepReadonlyObject<T>): T {\n    if (!o) return o;\n    return deepClone(o, false) as any;\n}\nexport const clone = recursiveDeepCopy;\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\n/**\n * @link https://stackoverflow.com/a/11509718/3443137\n */\nexport function firstPropertyNameOfObject(obj: any): string {\n    return Object.keys(obj)[0];\n}\nexport function firstPropertyValueOfObject<T>(obj: { [k: string]: T }): T {\n    const key = Object.keys(obj)[0];\n    return obj[key];\n}\n\n\nimport isElectron from 'is-electron';\nexport const isElectronRenderer = isElectron();\n\n\n/**\n * returns a flattened object\n * @link https://gist.github.com/penguinboy/762197\n */\nexport function flattenObject(ob: any) {\n    const toReturn: any = {};\n\n    for (const i in ob) {\n        if (!ob.hasOwnProperty(i)) continue;\n\n        if ((typeof ob[i]) === 'object') {\n            const flatObject = flattenObject(ob[i]);\n            for (const x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) continue;\n\n                toReturn[i + '.' + x] = flatObject[x];\n            }\n        } else {\n            toReturn[i] = ob[i];\n        }\n    }\n    return toReturn;\n}\n\n\nexport function parseRevision(revision: string): { height: number; hash: string } {\n    const split = revision.split('-');\n    return {\n        height: parseInt(split[0], 10),\n        hash: split[1]\n    }\n}\n\nexport function getHeightOfRevision(revision: string): number {\n    return parseRevision(revision).height;\n}\n\n/**\n * Creates the next write revision for a given document.\n */\nexport function createRevision<RxDocType>(\n    docData: RxDocumentData<RxDocType> & {\n        /**\n         * Passing a revision is optional here,\n         * because it is anyway not needed to calculate\n         * the new revision.\n         */\n        _rev?: string;\n    },\n    previousDocData?: RxDocumentData<RxDocType>\n): string {\n\n    const previousRevision = previousDocData ? previousDocData._rev : null;\n    const previousRevisionHeigth = previousRevision ? parseRevision(previousRevision).height : 0;\n    const newRevisionHeight = previousRevisionHeigth + 1;\n\n    const docWithoutRev = Object.assign({}, docData, {\n        _rev: undefined,\n        _rev_tree: undefined\n    });\n    const diggestString = JSON.stringify(docWithoutRev);\n    const revisionHash = Md5.hash(diggestString);\n\n\n    return newRevisionHeight + '-' + revisionHash;\n}\n\n/**\n * overwrites the getter with the actual value\n * Mostly used for caching stuff on the first run\n */\nexport function overwriteGetterForCaching<ValueType = any>(\n    obj: any,\n    getterName: string,\n    value: ValueType\n): ValueType {\n    Object.defineProperty(obj, getterName, {\n        get: function () { return value; }\n    });\n    return value;\n}\n\n/**\n * returns true if the given name is likely a folder path\n */\nexport function isFolderPath(name: string) {\n    // do not check, if foldername is given\n    if (\n        name.includes('/') || // unix\n        name.includes('\\\\') // windows\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getFromMapOrThrow<K, V>(map: Map<K, V> | WeakMap<any, V>, key: K): V {\n    const val = map.get(key);\n    if (!val) {\n        throw new Error('missing value from map ' + key);\n    }\n    return val;\n}\n\nexport function getFromObjectOrThrow<V>(\n    obj: { [k: string]: V },\n    key: string\n): V {\n    const val = obj[key];\n    if (!val) {\n        throw new Error('missing value from object ' + key);\n    }\n    return val;\n}\n\n/**\n * returns true if the supplied argument is either an Array<T> or a Readonly<Array<T>>\n */\nexport function isMaybeReadonlyArray(x: any): x is MaybeReadonly<any[]> {\n    // While this looks strange, it's a workaround for an issue in TypeScript:\n    // https://github.com/microsoft/TypeScript/issues/17002\n    //\n    // The problem is that `Array.isArray` as a type guard returns `false` for a readonly array,\n    // but at runtime the object is an array and the runtime call to `Array.isArray` would return `true`.\n    // The type predicate here allows for both `Array<T>` and `Readonly<Array<T>>` to pass a type check while\n    // still performing runtime type inspection.\n    return Array.isArray(x);\n}\n\nexport const blobBufferUtil = {\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    createBlobBuffer(\n        data: string,\n        type: string\n    ): BlobBuffer {\n\n        let blobBuffer: any;\n        if (isElectronRenderer) {\n            // if we are inside of electron-renderer, always use the node-buffer\n            return Buffer.from(data, {\n                type\n            } as any);\n        }\n\n        try {\n            // for browsers\n            blobBuffer = new Blob([data], {\n                type\n            } as any);\n        } catch (e) {\n            // for node\n            blobBuffer = Buffer.from(data, {\n                type\n            } as any);\n        }\n\n        return blobBuffer;\n    },\n    /**\n     * depending if we are on node or browser,\n     * we have to use Buffer(node) or Blob(browser)\n     */\n    async createBlobBufferFromBase64(\n        base64String: string,\n        type: string\n    ): Promise<BlobBuffer> {\n        let blobBuffer: any;\n        if (isElectronRenderer) {\n            // if we are inside of electron-renderer, always use the node-buffer\n            return Buffer.from(\n                base64String,\n                'base64'\n            );\n        }\n\n        try {\n            /**\n             * For browsers.\n             * @link https://ionicframework.com/blog/converting-a-base64-string-to-a-blob-in-javascript/\n             */\n            const base64Response = await fetch(`data:${type};base64,${base64String}`);\n            const blob = await base64Response.blob();\n            return blob;\n        } catch (e) {\n            // for node\n            blobBuffer = Buffer.from(\n                base64String,\n                'base64'\n            );\n        }\n\n        return blobBuffer;\n    },\n    isBlobBuffer(data: any): boolean {\n        if ((typeof Buffer !== 'undefined' && Buffer.isBuffer(data)) || data instanceof Blob) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n    toString(blobBuffer: BlobBuffer | string): Promise<string> {\n        if (typeof blobBuffer === 'string') {\n            return Promise.resolve(blobBuffer);\n        }\n        if (typeof Buffer !== 'undefined' && blobBuffer instanceof Buffer) {\n            // node\n            return nextTick()\n                .then(() => blobBuffer.toString());\n        }\n        return new Promise(res => {\n            // browser\n            const reader = new FileReader();\n            reader.addEventListener('loadend', e => {\n                const text = (e.target as any).result;\n                res(text);\n            });\n\n            const blobBufferType = Object.prototype.toString.call(blobBuffer);\n\n            /**\n             * in the electron-renderer we have a typed array insteaf of a blob\n             * so we have to transform it.\n             * @link https://github.com/pubkey/rxdb/issues/1371\n             */\n            if (blobBufferType === '[object Uint8Array]') {\n                blobBuffer = new Blob([blobBuffer]);\n            }\n\n            reader.readAsText(blobBuffer as any);\n        });\n    },\n    toBase64String(blobBuffer: BlobBuffer | string): Promise<string> {\n        if (typeof blobBuffer === 'string') {\n            return Promise.resolve(blobBuffer);\n        }\n        if (typeof Buffer !== 'undefined' && blobBuffer instanceof Buffer) {\n            // node\n            return nextTick()\n                /**\n                 * We use btoa() instead of blobBuffer.toString('base64')\n                 * to ensure that we have the same behavior in nodejs and the browser.\n                 */\n                .then(() => blobBuffer.toString('base64'));\n        }\n        return new Promise((res, rej) => {\n            /**\n             * Browser\n             * @link https://ionicframework.com/blog/converting-a-base64-string-to-a-blob-in-javascript/\n             */\n            const reader = new FileReader;\n            reader.onerror = rej;\n            reader.onload = () => {\n                // looks like 'data:plain/text;base64,YWFh...'\n                const fullResult = reader.result as any;\n                const split = fullResult.split(',');\n                split.shift();\n                res(split.join(','));\n            };\n\n            const blobBufferType = Object.prototype.toString.call(blobBuffer);\n\n            /**\n             * in the electron-renderer we have a typed array insteaf of a blob\n             * so we have to transform it.\n             * @link https://github.com/pubkey/rxdb/issues/1371\n             */\n            if (blobBufferType === '[object Uint8Array]') {\n                blobBuffer = new Blob([blobBuffer]);\n            }\n\n            reader.readAsDataURL(blobBuffer as any);\n        });\n    },\n    size(blobBuffer: BlobBuffer): number {\n        if (typeof Buffer !== 'undefined' && blobBuffer instanceof Buffer) {\n            // node\n            return Buffer.byteLength(blobBuffer);\n        } else {\n            // browser\n            return (blobBuffer as Blob).size;\n        }\n    }\n};\n\n/**\n * Using shareReplay() without settings will not unsubscribe\n * if there are no more subscribers.\n * So we use these defaults.\n * @link https://cartant.medium.com/rxjs-whats-changed-with-sharereplay-65c098843e95\n */\nexport const RXJS_SHARE_REPLAY_DEFAULTS = {\n    bufferSize: 1,\n    refCount: true\n}\n\n/**\n * We use 1 as minimum so that the value is never falsy.\n * This const is used in several places because querying\n * with a value lower then the minimum could give false results.\n */\nexport const RX_META_LWT_MINIMUM = 1;\n\nexport function getDefaultRxDocumentMeta(): RxDocumentMeta {\n    return {\n        /**\n         * Set this to 1 to not waste performance\n         * while calling new Date()..\n         * The storage wrappers will anyway update\n         * the lastWrite time while calling transformDocumentDataFromRxDBToRxStorage()\n         */\n        lwt: RX_META_LWT_MINIMUM\n    }\n}\n\n/**\n * Returns a revision that is not valid.\n * Use this to have correct typings\n * while the storage wrapper anyway will overwrite the revision.\n */\nexport function getDefaultRevision(): string {\n    /**\n     * Use a non-valid revision format,\n     * to ensure that the RxStorage will throw\n     * when the revision is not replaced downstream.\n     */\n    return '';\n}\n\n\nexport function getSortDocumentsByLastWriteTimeComparator<RxDocType>(primaryPath: string) {\n    return (a: RxDocumentData<RxDocType>, b: RxDocumentData<RxDocType>) => {\n        if (a._meta.lwt === b._meta.lwt) {\n            if ((b as any)[primaryPath] < (a as any)[primaryPath]) {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            return a._meta.lwt - b._meta.lwt;\n        }\n    };\n}\nexport function sortDocumentsByLastWriteTime<RxDocType>(\n    primaryPath: string,\n    docs: RxDocumentData<RxDocType>[]\n): RxDocumentData<RxDocType>[] {\n    return docs.sort(getSortDocumentsByLastWriteTimeComparator(primaryPath));\n}\n"],"file":"util.js"}