{"version":3,"sources":["../../src/rx-collection-helper.ts"],"names":["createRxCollectionStorageInstance","rxDatabase","storageInstanceCreationParams","multiInstance","storage","createStorageInstance","fillObjectDataBeforeInsert","schema","data","useJson","fillObjectWithDefaults","primaryPath","jsonSchema","_meta","hasOwnProperty","_deleted","_attachments","_rev"],"mappings":";;;;;;;;AAMA;;AACA;;AAgCA;AACA;AACA;IACsBA,iC,YAAAA,iC,CAClBC,U,EACAC,6B;MAC8E;AAC9EA,IAAAA,6BAA6B,CAACC,aAA9B,GAA8CF,UAAU,CAACE,aAAzD;AAD8E,2BAEhDF,UAAU,CAACG,OAAX,CAAmBC,qBAAnB,CAC1BH,6BAD0B,CAFgD;AAMjF,G;;;;;;;AAvCD;AACA;AACA;AACA;AACO,SAASI,0BAAT,CACHC,MADG,EAEHC,IAFG,EAGsB;AACzB,MAAIC,OAAO,GAAGF,MAAM,CAACG,sBAAP,CAA8BF,IAA9B,CAAd;AACAC,EAAAA,OAAO,GAAG,oCACNF,MAAM,CAACI,WADD,EAENJ,MAAM,CAACK,UAFD,EAGNH,OAHM,CAAV;AAKAA,EAAAA,OAAO,CAACI,KAAR,GAAgB,qCAAhB;;AACA,MAAI,CAACJ,OAAO,CAACK,cAAR,CAAuB,UAAvB,CAAL,EAAyC;AACrCL,IAAAA,OAAO,CAACM,QAAR,GAAmB,KAAnB;AACH;;AACD,MAAI,CAACN,OAAO,CAACK,cAAR,CAAuB,cAAvB,CAAL,EAA6C;AACzCL,IAAAA,OAAO,CAACO,YAAR,GAAuB,EAAvB;AACH;;AACD,MAAI,CAACP,OAAO,CAACK,cAAR,CAAuB,MAAvB,CAAL,EAAqC;AACjCL,IAAAA,OAAO,CAACQ,IAAR,GAAe,0BAAeR,OAAf,CAAf;AACH;;AACD,SAAOA,OAAP;AACH","sourcesContent":["import type {\n    RxDatabase,\n    RxDocumentData,\n    RxStorageInstance,\n    RxStorageInstanceCreationParams\n} from './types';\nimport { createRevision, getDefaultRxDocumentMeta } from './util';\nimport {\n    fillPrimaryKey\n} from './rx-schema-helper';\nimport type { RxSchema } from './rx-schema';\n\n/**\n * fills in the default data.\n * This also clones the data.\n */\nexport function fillObjectDataBeforeInsert<RxDocType>(\n    schema: RxSchema<RxDocType>,\n    data: Partial<RxDocumentData<RxDocType>> | any\n): RxDocumentData<RxDocType> {\n    let useJson = schema.fillObjectWithDefaults(data);\n    useJson = fillPrimaryKey(\n        schema.primaryPath,\n        schema.jsonSchema,\n        useJson\n    );\n    useJson._meta = getDefaultRxDocumentMeta();\n    if (!useJson.hasOwnProperty('_deleted')) {\n        useJson._deleted = false;\n    }\n    if (!useJson.hasOwnProperty('_attachments')) {\n        useJson._attachments = {};\n    }\n    if (!useJson.hasOwnProperty('_rev')) {\n        useJson._rev = createRevision(useJson);\n    }\n    return useJson;\n}\n\n/**\n * Creates the storage instances that are used internally in the collection\n */\nexport async function createRxCollectionStorageInstance<RxDocumentType, Internals, InstanceCreationOptions>(\n    rxDatabase: RxDatabase<{}, Internals, InstanceCreationOptions>,\n    storageInstanceCreationParams: RxStorageInstanceCreationParams<RxDocumentType, InstanceCreationOptions>\n): Promise<RxStorageInstance<RxDocumentType, Internals, InstanceCreationOptions>> {\n    storageInstanceCreationParams.multiInstance = rxDatabase.multiInstance;\n    const storageInstance = await rxDatabase.storage.createStorageInstance<RxDocumentType>(\n        storageInstanceCreationParams\n    );\n    return storageInstance;\n}\n"],"file":"rx-collection-helper.js"}